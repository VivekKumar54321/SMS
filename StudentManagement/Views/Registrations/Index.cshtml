@model StudentManagement.Pagination.PaginatedList<StudentManagement.Models.Registration>
@{
    ViewBag.Title = "Registrations";
}
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>


@using (Html.BeginForm("Index", "Registrations"))
{
    <p>
        Search : @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Ok" />
    </p>
}
<table class="table table-bordered table-hover">
    <thead class="thead-light">
        <tr>
            <th>
                @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.StudentName , currentFilter=ViewBag.CurrentFilter })

            </th>
            <th>

                @Html.ActionLink("Address", "Index", new { sortOrder = ViewBag.StudentAddress , currentFilter=ViewBag.CurrentFilter })

            </th>
            <th>
                @Html.ActionLink("PhoneNo", "Index", new { sortOrder = ViewBag.StudentPhoneNo , currentFilter=ViewBag.CurrentFilter})

            </th>
            <th>
                @Html.ActionLink("PaymentType", "Index", new { sortOrder = ViewBag.PaymentType , currentFilter=ViewBag.CurrentFilter})

            </th>
            <th>
                @Html.ActionLink("PaymentAmount", "Index", new { sortOrder = ViewBag.PaymentAmount , currentFilter=ViewBag.CurrentFilter})

            </th>
            <th>
                @Html.ActionLink("FacultyName", "Index", new { sortOrder = ViewBag.FacultyName , currentFilter=ViewBag.CurrentFilter})

            </th>
            <th>
                @Html.ActionLink("Issued Date", "Index", new { sortOrder = ViewBag.IssuedDate , currentFilter=ViewBag.CurrentFilter})
                @*@Html.DisplayNameFor(model => model.IssuedDate)*@
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.Student.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Student.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Student.PhoneNo)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Payment.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Payment.Amount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Faculty.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IssuedDate)
                </td>
                <td>
                    <a asp-action="Edit" class="btn btn-outline-primary" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" class="btn btn-outline-success" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" class="btn btn-outline-danger" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>